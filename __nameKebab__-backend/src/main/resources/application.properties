app.version=@project.version@
info.app.version=@project.version@

#spring.profiles.active=dev

spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS = false

logging.file.path=logs
logging.file.name=logs/__nameKebab__.log

logging.level.root=INFO
logging.level.at.craftworks.__companyLower__.__projectLower__=DEBUG
logging.pattern.level=%5p [u:%X{cwuser}]

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
# Compress the response only if the response size is at least 1KB
server.compression.min-response-size=1024

# Setting this to true to avoid error "Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented."
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# handle (lazy)loading yourself https://vladmihalcea.com/the-best-way-to-handle-the-lazyinitializationexception/
spring.jpa.open-in-view=false
# no auto-generated REST endpoints for models
spring.data.rest.detection-strategy=annotated

spring.datasource.url=jdbc:postgresql://localhost:5432/__nameLower__
spring.datasource.username=__nameLower__
spring.datasource.password=__nameLower__
# spring.datasource.driver-class-name=xxx

spring.jpa.hibernate.ddl-auto=validate
hibernate.hbm2ddl.auto=validate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect
spring.jpa.generate-ddl=false
spring.jpa.show-sql=false

# explicit definition of naming strategy, so its consistent for application and tests
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

springdoc.default-produces-media-type=application/json
# disable api docs by default
springdoc.swagger-ui.enabled=false
springdoc.api-docs.enabled=false


#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://auth.k8s1.craftworks.io/realms/__nameKebab__/protocol/openid-connect/certs